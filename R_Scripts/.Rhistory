dir <- "C:/Users/mattf/Desktop/dms_variation_data"
library("stringr")
library("ggplot2")
library("plyr")
library("dplyr")
library("quantreg")
log1 <- read.csv(str_c(dir,"october_2016","dms_sampling_log.csv",sep="/"))
log2 <- read.csv(str_c(dir,"november_2016","dms_sampling_log.csv",sep="/"))
log2$trial_id <- log2$trial_id + 6
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"))
log4 <- read.csv(str_c(dir,"march_2017","dms_sampling_log.csv",sep="/"))
View(log2)
View(log3)
View(log4)
View(log3)
View(log4)
log <- rbind(log1,log2)
View(log4)
View(log)
log <- rbind(log1,log2,log3,log4)
log <- rbind(log1,log2,log3)
colnames(log)
colnames(log3)
colnames(log4)
View(log3)
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"))
View(log3)
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"),check.names=FALSE)
View(log3)
str(log3)
colnames(log3)[1] <- "trial_id"
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"))
colnames(log3)[1] <- "trial_id"
log4 <- read.csv(str_c(dir,"march_2017","dms_sampling_log.csv",sep="/"))
colnames(log4)[1] <- "trial_id"
log <- rbind(log1,log2,log3,log4)
colnames(log1)
colnames(log3)
str(log1)
?read.csv
log1 <- read.csv(str_c(dir,"october_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2 <- read.csv(str_c(dir,"november_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2$trial_id <- log2$trial_id + 6
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log3)[1] <- "trial_id"
log4 <- read.csv(str_c(dir,"march_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log4)[1] <- "trial_id"
dir <- "C:/Users/mattf/Desktop/dms_variation_data"
log1 <- read.csv(str_c(dir,"october_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2 <- read.csv(str_c(dir,"november_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2$trial_id <- log2$trial_id + 6
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log3)[1] <- "trial_id"
log4 <- read.csv(str_c(dir,"march_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log4)[1] <- "trial_id"
log <- rbind(log1,log2,log3,log4)
View(log)
log4 <- log4[!is.na(log4$trial_id),]
log <- rbind(log1,log2,log3,log4)
str(log)
log$trial_id <- as.factor(log$trial_id)
log$tide <- as.factor(log$tide)
log$light <- as.factor(log$light)
log$richness <- as.numeric(log$richness)
log$abundance <- as.numeric(log$abundance)
log$datetime <- as.POSIXct(str_c(log$date," ",log$time,sep=""),format="%m/%d/%Y %H:%M")
log$dms <- log$X.dms.
log$sample <- log$sample.
log <- select(log,datetime,time,trial_id,sample,tide,light,dms,biological,richness, abundance,notes)
dir <- "C:/Users/mattf/Desktop/RSMAS/dms_variation_data"
# load required libraries
library("stringr")
library("ggplot2")
library("plyr")
library("dplyr")
library("quantreg")
# read your data log
log1 <- read.csv(str_c(dir,"october_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2 <- read.csv(str_c(dir,"november_2016","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
log2$trial_id <- log2$trial_id + 6
log3 <- read.csv(str_c(dir,"february_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log3)[1] <- "trial_id"
log4 <- read.csv(str_c(dir,"march_2017","dms_sampling_log.csv",sep="/"),stringsAsFactors=FALSE)
colnames(log4)[1] <- "trial_id"
log4 <- log4[!is.na(log4$trial_id),]
log <- rbind(log1,log2,log3,log4)
# some cleaning up
log$trial_id <- as.integer(log$trial_id)
log$tide <- as.factor(log$tide)
log$light <- as.factor(log$light)
log$richness <- as.numeric(log$richness)
log$abundance <- as.numeric(log$abundance)
log$datetime <- as.POSIXct(str_c(log$date," ",log$time,sep=""),format="%m/%d/%Y %H:%M")
log$dms <- log$X.dms.
log$sample <- log$sample.
log <- select(log,datetime,time,trial_id,sample,tide,light,dms,biological,richness, abundance,notes)
View(log)
logS <- ddply(log, .(tide,light), summarise, avg = mean(dms), sd = sd(dms), se= sd(dms)/sqrt(length(dms)))
View(logS)
logB <- log[log$biological == "TRUE",]
ggplot(logB, aes(x=dms,y=richness)) + geom_point() + geom_smooth(method="lm") +
xlab("[DMS] (nm)") + ylab("Species Richness")
ggplot(logB, aes(x=dms,y=abundance)) + geom_point() + geom_smooth(method="lm") +
xlab("[DMS] (nm)") + ylab("Larval Abundance")
View(logB)
library("plyr")
library("stringr")
library("reshape2")
library("ggplot2")
library("circular")
library("discr")
library("lme4")
library("lmerTest")
dir <- "C:/Users/mattf/Desktop/RSMAS/flume_processing/villermaux_samples"
# set experiment directories
dir4 <- str_c(dir,"/exp4")
dir5 <- str_c(dir,"/exp5")
dir7 <- str_c(dir,"/exp7")
dir8 <- str_c(dir,"/exp8")
dir9 <- str_c(dir,"/exp9")
# load experiment summary files
exp4 <- read.csv(str_c(dir4,"/expSummary.csv"))
exp5 <- read.csv(str_c(dir5,"/expSummary.csv"))
exp7 <- read.csv(str_c(dir7,"/expSummary.csv"))
exp8 <- read.csv(str_c(dir8,"/expSummary.csv"))
exp9 <- read.csv(str_c(dir9,"/expSummary.csv"))
# load experiment track files
track4 <- read.csv(str_c(dir4,"/processed_tracks.csv"))
track5 <- read.csv(str_c(dir5,"/processed_tracks.csv"))
track5 <- subset(track5, frame<=2100)
track7 <- read.csv(str_c(dir7,"/processed_tracks.csv"))
track8 <- read.csv(str_c(dir8,"/processed_tracks.csv"))
track9 <- read.csv(str_c(dir9,"/processed_tracks.csv"))
# load calibration files
cal4 <- read.csv(str_c(dir4,"/ct_cal_points.csv"))
cal5 <- read.csv(str_c(dir5,"/ct_cal_points.csv"))
cal7 <- read.csv(str_c(dir7,"/ct_cal_points.csv"))
cal8 <- read.csv(str_c(dir8,"/ct_cal_points.csv"))
cal9 <- read.csv(str_c(dir9,"/ct_cal_points.csv"))
# calculate total trial time
exp4$seconds <- exp4$totalDistance/exp4$activity
exp5$seconds <- exp5$totalDistance/exp5$activity
exp7$seconds <- exp7$totalDistance/exp7$activity
exp8$seconds <- exp8$totalDistance/exp8$activity
exp9$seconds <- exp9$totalDistance/exp9$activity
# calculate initial distance away from source (in pixels)
exp4$init <- sqrt((track4[1,c("y")] - cal4[2,c("Y")])^2 + (track4[1,c("x")] - cal4[2,c("X")])^2)
exp5$init <- sqrt((track5[1,c("y")] - cal5[2,c("Y")])^2 + (track5[1,c("x")] - cal5[2,c("X")])^2)
exp7$init <- sqrt((track7[1,c("y")] - cal7[2,c("Y")])^2 + (track7[1,c("x")] - cal7[2,c("X")])^2)
exp8$init <- sqrt((track8[1,c("y")] - cal8[2,c("Y")])^2 + (track8[1,c("x")] - cal8[2,c("X")])^2)
exp9$init <- sqrt((track9[1,c("y")] - cal9[2,c("Y")])^2 + (track9[1,c("x")] - cal9[2,c("X")])^2)
# calculate initial distance away from point where trial was terminated
exp4$init2 <- sqrt((track4[1,c("y")] - track4[nrow(track4),c("y")])^2 + (track4[1,c("x")] - track4[nrow(track4),c("x")])^2)
exp5$init2 <- sqrt((track5[1,c("y")] - track5[nrow(track5),c("y")])^2 + (track5[1,c("x")] - track5[nrow(track5),c("x")])^2)
exp7$init2 <- sqrt((track7[1,c("y")] - track7[nrow(track7),c("y")])^2 + (track7[1,c("x")] - track7[nrow(track7),c("x")])^2)
exp8$init2 <- sqrt((track8[1,c("y")] - track8[nrow(track8),c("y")])^2 + (track8[1,c("x")] - track8[nrow(track8),c("x")])^2)
exp9$init2 <- sqrt((track9[1,c("y")] - track9[nrow(track9),c("y")])^2 + (track9[1,c("x")] - track9[nrow(track9),c("x")])^2)
# label the experiments
exp4$exp <- 4
exp5$exp <- 5
exp7$exp <-7
exp8$exp <- 8
exp9$exp <- 9
# and combine them into one files
expT <- rbind(exp4,exp5[,2:13],exp7,exp8,exp9)
expT2 <- rbind(exp4,exp5[,2:13],exp7,exp9)
# convert pixel distances to cm
expT$init <- expT$init/10
expT2$init <- expT2$init/10
expT$init2 <- expT$init2/10
expT2$init2 <- expT2$init2/10
# for track 4
t <- track4
cal <- cal4
t$dt <- NA
t$d <- NA
t$st <- NA
b <- 4
for (i in seq(from=1,to=nrow(t),by=b)){
dx <- t[i+b,c("x")] - t[i,c("x")]
dy <- t[i+b,c("y")] - t[i,c("y")]
d <- sqrt(dx^2 + dy^2) / 10
dt <- atan2(dx,dy)*180/pi
dt <- dt + 90
if (dt<0){dt <- 360 + dt}
if (dt>360){dt <- dt - 360}
t[i,c("dt")] <- dt
t[i,c("d")] <- d
sx <- cal[2,c("X")] - t[i,c("x")]
sy <- cal[2,c("X")] - t[i,c("y")]
st <- atan2(sx,sy)*180/pi
st <- -(st + 90)
if (st<0){st <- 360 + st}
if (st>360){st <- st - 360}
t[i,c("st")] <- st
}
t4 <- t
ggplot(t4) + polar() +
geom_point(aes(x=dt,y=d,color=frame)) + ylab("Distance (cm)") + xlab("Direction") +
scale_x_continuous("", limits=c(0,360), breaks=seq(0,360-1,by=45), labels=c("Upstream","","Right","","Downstream","","Left",""))
# for track 5
t <- track5
cal <- cal5
t$dt <- NA
t$d <- NA
t$st <- NA
b <- 4
for (i in seq(from=1,to=nrow(t),by=b)){
dx <- t[i+b,c("x")] - t[i,c("x")]
dy <- t[i+b,c("y")] - t[i,c("y")]
d <- sqrt(dx^2 + dy^2) / 10
dt <- atan2(dx,dy)*180/pi
dt <- dt + 90
if (dt<0){dt <- 360 + dt}
if (dt>360){dt <- dt - 360}
t[i,c("dt")] <- dt
t[i,c("d")] <- d
sx <- cal[2,c("X")] - t[i,c("x")]
sy <- cal[2,c("X")] - t[i,c("y")]
st <- atan2(sx,sy)*180/pi
st <- -(st + 90)
if (st<0){st <- 360 + st}
if (st>360){st <- st - 360}
t[i,c("st")] <- st
}
t5 <- t
ggplot(t5) + polar() +
geom_point(aes(x=dt,y=d,color=frame)) + ylab("Distance (cm)") + xlab("Direction") + ylim(0,4) +
scale_x_continuous("", limits=c(0,360), breaks=seq(0,360-1,by=45), labels=c("Upstream","","Right","","Downstream","","Left",""))
# for track 7
t <- track7
cal <- cal7
t$dt <- NA
t$d <- NA
t$st <- NA
b <- 4
for (i in seq(from=1,to=nrow(t),by=b)){
dx <- t[i+b,c("x")] - t[i,c("x")]
dy <- t[i+b,c("y")] - t[i,c("y")]
d <- sqrt(dx^2 + dy^2) / 10
dt <- atan2(dx,dy)*180/pi
dt <- dt + 90
if (dt<0){dt <- 360 + dt}
if (dt>360){dt <- dt - 360}
t[i,c("dt")] <- dt
t[i,c("d")] <- d
sx <- cal4[2,c("X")] - t[i,c("x")]
sy <- cal4[2,c("X")] - t[i,c("y")]
st <- atan2(sx,sy)*180/pi
st <- -(st + 90)
if (st<0){st <- 360 + st}
if (st>360){st <- st - 360}
t[i,c("st")] <- st
}
t7 <- t
ggplot(t7) + polar() +
geom_point(aes(x=dt,y=d,color=frame)) + ylab("Distance (cm)") + xlab("Direction") +
scale_x_continuous("", limits=c(0,360), breaks=seq(0,360-1,by=45), labels=c("Upstream","","Right","","Downstream","","Left",""))
# for track 8
t <- track8
cal <- cal8
t$dt <- NA
t$d <- NA
t$st <- NA
b <- 3
for (i in seq(from=1,to=nrow(t),by=b)){
dx <- t[i+b,c("x")] - t[i,c("x")]
dy <- t[i+b,c("y")] - t[i,c("y")]
d <- sqrt(dx^2 + dy^2) / 10
dt <- atan2(dx,dy)*180/pi
dt <- dt + 90
if (dt<0){dt <- 360 + dt}
if (dt>360){dt <- dt - 360}
t[i,c("dt")] <- dt
t[i,c("d")] <- d
sx <- cal4[2,c("X")] - t[i,c("x")]
sy <- cal4[2,c("X")] - t[i,c("y")]
st <- atan2(sx,sy)*180/pi
st <- -(st + 90)
if (st<0){st <- 360 + st}
if (st>360){st <- st - 360}
t[i,c("st")] <- st
}
t8 <- t
ggplot(t8) + polar() +
geom_point(aes(x=dt,y=d,color=frame)) + ylab("Distance (cm)") + xlab("Direction") + ylim(0,5) +
scale_x_continuous("", limits=c(0,360), breaks=seq(0,360-1,by=45), labels=c("Upstream","","Right","","Downstream","","Left",""))
# for track 9
t <- track9
cal <- cal9
t$dt <- NA
t$d <- NA
t$st <- NA
b <- 3
for (i in seq(from=1,to=nrow(t),by=b)){
dx <- t[i+b,c("x")] - t[i,c("x")]
dy <- t[i+b,c("y")] - t[i,c("y")]
d <- sqrt(dx^2 + dy^2) / 10
dt <- atan2(dx,dy)*180/pi
dt <- dt + 90
if (dt<0){dt <- 360 + dt}
if (dt>360){dt <- dt - 360}
t[i,c("dt")] <- dt
t[i,c("d")] <- d
sx <- cal4[2,c("X")] - t[i,c("x")]
sy <- cal4[2,c("X")] - t[i,c("y")]
st <- atan2(sx,sy)*180/pi
st <- -(st + 90)
if (st<0){st <- 360 + st}
if (st>360){st <- st - 360}
t[i,c("st")] <- st
}
t9 <- t
ggplot(t9) + polar() +
geom_point(aes(x=dt,y=d,color=frame)) + ylab("Distance (cm)") + xlab("Direction") +
scale_x_continuous("", limits=c(0,360), breaks=seq(0,360-1,by=45), labels=c("Upstream","","Right","","Downstream","","Left",""))
## Turning Angle Analysis -----------------
# produce smoothed turning angles at 1/10 second intervals
# here is the function to do it
turnAngleCalc <- function(x,samp,fr){
# x is the data frame
# samp your sampling frequency (e.g., 1 is one second intervals, 0.5 is half second intervals)
# fr is the number of frames per second for the images
# exp is the experiment number to label the file
b <- samp * fr
trackz <- x
trackz$xx <- 0
trackz$yy <- 0
trackz$bearing <- 0
trackz$turnAngle <- 0
for (i in seq(from=1,to=nrow(trackz),by=b)){
trackz[i,c("xx")] <- trackz[i+b,c("x")] - trackz[i,c("x")]
trackz[i,c("yy")] <- trackz[i+b,c("y")] - trackz[i,c("y")]
trackz[i,c("bearing")] <- angleFun(trackz[i,c("xx")],trackz[i,c("yy")])
if (is.na(trackz[i,c("bearing")])) {
trackz[i,c("bearing")] = trackz[i-1,c("bearing")]
}
if (trackz[i,c("bearing")] == 0) {
trackz[i,c("bearing")] <- 360
}
}
for (i in seq(from=1,to=nrow(trackz)-b,by=b)) {
angle <- trackz[i+b,c("bearing")] - trackz[i,c("bearing")]
if (angle <= 0) {
angle = angle + 360
}
trackz[i,c("turnAngle")] <- angle
}
trackz[trackz$turnAngle == 360,c("turnAngle")] <- 0
trackz$absAngle <- trackz$turnAngle
trackz$turnDir <- trackz$turnAngle
trackz[trackz$turnAngle > 180,c("absAngle")] <- -trackz[trackz$turnAngle > 180,c("turnAngle")] +360
trackz[trackz$turnAngle > 180,c("turnDir")] <-trackz[trackz$turnAngle > 180,c("turnAngle")] - 360
return(trackz)
}
angleFun <- function(xx,yy){
## xx and yy are the differences in x and y coordinates between two points
c = 180/pi
b<-sign(xx)
b[b==0]<-1  #corrects for the fact that sign(0) == 0
tempangle = b*(yy<0)*pi+atan(xx/yy)
tempangle[tempangle<0]<-tempangle[tempangle<0]+2*pi
return(tempangle*c)
}
# now do it
trak4 <- turnAngleCalc(t4,1,40)
trak5 <- turnAngleCalc(t5,1,40)
trak7 <- turnAngleCalc(t7,1,40)
trak8 <- turnAngleCalc(t8,1,30)
trak9 <- turnAngleCalc(t9,1,30)
# plot the combined frequency
trak4$exp <- 4
trak5$exp <- 5
trak7$exp <- 7
trak8$exp <- 8
trak9$exp <- 9
traks <- rbind(trak4,trak5,trak7,trak9)
ggplot(traks[traks$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
ggplot(trak4[trak4$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
ggplot(trak5[trak5$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
ggplot(trak7[trak7$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
ggplot(trak8[trak8$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
ggplot(trak9[trak9$turnDir!=0,], aes(x=turnDir)) +
geom_histogram(binwidth=5) + theme_bw() +
xlab("Turning Angle") + theme(axis.title.y=element_blank())
expT2$ngdr <- expT2$init/expT2$totalDistance
View(expT2)
expT$ngdr <- expT$init/expT$totalDistance
View(expT)
